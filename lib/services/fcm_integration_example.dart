/// Example of how to integrate FCM service in your main.dart
/// 
/// This is a reference file showing how to initialize Firebase and FCM
/// Copy the relevant parts to your actual main.dart file

/*

import 'package:firebase_core/firebase_core.dart';
import 'package:cal_ai/services/fcm_service.dart';
import 'package:cal_ai/services/api_service_provider.dart';
import 'firebase_options.dart'; // This will be generated by flutterfire configure

void main() async {
  WidgetsFlutterBinding.ensureInitialized();
  
  // Initialize Firebase
  await Firebase.initializeApp(
    options: DefaultFirebaseOptions.currentPlatform,
  );
  
  runApp(
    ProviderScope(
      child: MyApp(),
    ),
  );
}

class MyApp extends ConsumerStatefulWidget {
  const MyApp({super.key});

  @override
  ConsumerState<MyApp> createState() => _MyAppState();
}

class _MyAppState extends ConsumerState<MyApp> {
  @override
  void initState() {
    super.initState();
    _initializeFCM();
  }

  Future<void> _initializeFCM() async {
    // Wait a bit for providers to be ready
    await Future.delayed(const Duration(seconds: 1));
    
    try {
      final apiService = ref.read(apiServiceProvider);
      await FCMService().initialize(apiService);
    } catch (e) {
      print('Error initializing FCM: $e');
    }
  }

  @override
  Widget build(BuildContext context) {
    return MaterialApp.router(
      routerConfig: AppRouter.router,
      // ... rest of your app configuration
    );
  }
}

// When user logs out, unregister the FCM token:
Future<void> logout(WidgetRef ref) async {
  try {
    final apiService = ref.read(apiServiceProvider);
    await FCMService().unregisterToken(apiService);
    
    // Continue with your logout flow
    // Clear auth tokens, navigate to login, etc.
  } catch (e) {
    print('Error during logout: $e');
  }
}

*/
