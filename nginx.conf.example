# Nginx configuration for Cal AI deployment
# HTTP to HTTPS redirect for all subdomains
server {
    listen 80;
    server_name logme.yadbanapp.com dev-logme.yadbanapp.com;

    location / {
        return 301 https://$host$request_uri;
    }
}

# Production Configuration (logme.yadbanapp.com)
server {
    listen 443 ssl http2;
    server_name logme.yadbanapp.com;

    ssl_certificate /etc/letsencrypt/live/logme.yadbanapp.com/fullchain.pem;
    ssl_certificate_key /etc/letsencrypt/live/logme.yadbanapp.com/privkey.pem;
    
    ssl_protocols TLSv1.2 TLSv1.3;
    ssl_ciphers HIGH:!aNULL:!MD5;
    ssl_prefer_server_ciphers off;
    
    # Security Headers
    add_header X-Frame-Options "SAMEORIGIN" always;
    add_header X-XSS-Protection "1; mode=block" always;
    add_header X-Content-Type-Options "nosniff" always;
    add_header Referrer-Policy "no-referrer-when-downgrade" always;
    add_header Content-Security-Policy "default-src 'self' http: https: data: blob: 'unsafe-inline'" always;
    add_header Strict-Transport-Security "max-age=31536000; includeSubDomains" always;

    # API Proxy to Node.js Backend
    location /api/ {
        proxy_pass http://127.0.0.1:9000;
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection 'upgrade';
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_cache_bypass $http_upgrade;
        proxy_read_timeout 300s;
        proxy_connect_timeout 75s;
    }

    # Health check endpoint
    location /health {
        proxy_pass http://127.0.0.1:9000;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
    }

    # API documentation (if available)
    location /api-docs {
        proxy_pass http://127.0.0.1:9000;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
    }

    # Flutter Web App
    location / {
        root /var/www/cal-ai/web;
        index index.html;
        try_files $uri $uri/ /index.html;
        
        # Cache static assets (1 year) for immutable build files
        location ~* \.(js|css|png|jpg|jpeg|gif|ico|svg|woff|woff2|ttf|eot|wasm)$ {
            expires 1y;
            add_header Cache-Control "public, immutable";
        }
        
        # No cache for HTML files
        location ~* \.html$ {
            add_header Cache-Control "no-store, no-cache, must-revalidate";
        }
        
        # Security headers for web app
        add_header X-Frame-Options "SAMEORIGIN" always;
        add_header X-Content-Type-Options "nosniff" always;
    }

    # Gzip compression
    gzip on;
    gzip_vary on;
    gzip_min_length 1024;
    gzip_proxied expired no-cache no-store private auth;
    gzip_types text/plain text/css text/xml text/javascript application/x-javascript application/xml+rss application/javascript application/json;

    # Logs
    access_log /var/log/nginx/cal-ai-prod.access.log;
    error_log /var/log/nginx/cal-ai-prod.error.log;
}

# Development Configuration (dev-logme.yadbanapp.com)
server {
    listen 443 ssl http2;
    server_name dev-logme.yadbanapp.com;

    ssl_certificate /etc/letsencrypt/live/dev-logme.yadbanapp.com/fullchain.pem;
    ssl_certificate_key /etc/letsencrypt/live/dev-logme.yadbanapp.com/privkey.pem;
    
    ssl_protocols TLSv1.2 TLSv1.3;
    ssl_ciphers HIGH:!aNULL:!MD5;
    ssl_prefer_server_ciphers off;
    
    # Security Headers
    add_header X-Frame-Options "SAMEORIGIN" always;
    add_header X-XSS-Protection "1; mode=block" always;
    add_header X-Content-Type-Options "nosniff" always;
    add_header Referrer-Policy "no-referrer-when-downgrade" always;
    add_header Content-Security-Policy "default-src 'self' http: https: data: blob: 'unsafe-inline'" always;
    add_header Strict-Transport-Security "max-age=31536000; includeSubDomains" always;

    # API Proxy to Development Node.js Backend
    location /api/ {
        proxy_pass http://127.0.0.1:9001;
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection 'upgrade';
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_cache_bypass $http_upgrade;
        proxy_read_timeout 300s;
        proxy_connect_timeout 75s;
    }

    # Health check endpoint
    location /health {
        proxy_pass http://127.0.0.1:9001;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
    }

    # API documentation (if available)
    location /api-docs {
        proxy_pass http://127.0.0.1:9001;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
    }

    # Flutter Web App (Development) - No caching for easier development
    location / {
        root /var/www/cal-ai-dev/web;
        index index.html;
        try_files $uri $uri/ /index.html;
        
        # No caching in development
        add_header Cache-Control "no-store, no-cache, must-revalidate";
        
        # Proper MIME types for Flutter web files
        location ~* \.js$ {
            add_header Content-Type application/javascript;
            add_header Cache-Control "no-store, no-cache, must-revalidate";
        }
        location ~* \.json$ {
            add_header Content-Type application/json;
            add_header Cache-Control "no-store, no-cache, must-revalidate";
        }
        location ~* \.wasm$ {
            add_header Content-Type application/wasm;
            add_header Cache-Control "no-store, no-cache, must-revalidate";
        }
        location ~* \.css$ {
            add_header Content-Type text/css;
            add_header Cache-Control "no-store, no-cache, must-revalidate";
        }
        location ~* \.html$ {
            add_header Content-Type text/html;
            add_header Cache-Control "no-store, no-cache, must-revalidate";
        }
        
        # Security headers for web app
        add_header X-Frame-Options "SAMEORIGIN" always;
        add_header X-Content-Type-Options "nosniff" always;
    }

    # Logs
    access_log /var/log/nginx/cal-ai-dev.access.log;
    error_log /var/log/nginx/cal-ai-dev.error.log;
}